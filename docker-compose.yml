services:
  db:
    image: postgres:15
    container_name: aoe2-postgres
    environment:
      POSTGRES_USER: aoe2user
      POSTGRES_PASSWORD: secretpassword
      POSTGRES_DB: aoe2db
    ports:
      - "5432:5432"
    volumes:
      - aoe2db_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "aoe2user"]
      interval: 3s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: aoe2-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@aoe2.com
      PGADMIN_DEFAULT_PASSWORD: adminpass
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db

  # Renamed from "backend" to "aoe2-backend"
  aoe2-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aoe2-backend  # optional but consistent
    ports:
      - "8002:8002"
    volumes:
      - .:/app
      # If you still need the local path to your replays, keep it below:
      - "/Users/tonyblum/Library/Application Support/CrossOver/Bottles/Steam/drive_c/Program Files (x86)/Steam/steamapps/common/Age2HD/SaveGame:/replays"
    environment:
      FLASK_ENV: development
      # The Postgres service name is "db", so we connect to "db:5432"
      DATABASE_URL: postgresql://aoe2user:secretpassword@db:5432/aoe2db

      # If you have a /api/parse_replay route, you can keep FLASK_API_URL, or remove if not used
      FLASK_API_URL: http://aoe2-backend:8002/api/parse_replay

      ADMIN_TOKEN: secretadmin
      ENABLE_DEV_ENDPOINTS: "true"

    # This runs your Flask app
    command: ["python", "app.py"]

    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ../aoe2hd-frontend
      dockerfile: Dockerfile
    container_name: aoe2hd-parsing-frontend-1
    ports:
      - "3000:3000"
    volumes:
      - ../aoe2hd-frontend:/app
    env_file:
      - ../aoe2hd-frontend/.env
    environment:
      NODE_ENV: development
      DOCKER: "true"  # âœ… lets next.config.js know we're in Docker
    command: npm run dev

    # The front end depends on the new "aoe2-backend" service
    depends_on:
      - aoe2-backend

volumes:
  aoe2db_data:
  pgadmin_data:
